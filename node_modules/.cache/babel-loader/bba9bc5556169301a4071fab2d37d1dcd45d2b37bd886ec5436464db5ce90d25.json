{"ast":null,"code":"var _jsxFileName = \"/Users/surbhi/Desktop/wellness-retreat/src/components/DateDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RetreatsFilter = () => {\n  _s();\n  const [selectedRange, setSelectedRange] = useState('');\n  const [retreats, setRetreats] = useState([]);\n\n  // Function to convert date range to Unix timestamps\n  const getDateRange = range => {\n    const [startYear, endYear] = range.split('-').map(Number);\n    const startDate = new Date(startYear, 0, 1); // January 1st of the start year\n    const endDate = new Date(endYear + 1, 0, 1); // January 1st of the next year\n    return {\n      start: Math.floor(startDate.getTime() / 1000),\n      // Convert to Unix timestamp\n      end: Math.floor(endDate.getTime() / 1000)\n    };\n  };\n\n  // Function to fetch data from API and filter based on date range\n  const fetchDataAndFilter = async range => {\n    const {\n      start,\n      end\n    } = getDateRange(range);\n    try {\n      const response = await axios.get('https://669f704cb132e2c136fdd9a0.mockapi.io/api/v1/retreats');\n      const filtered = response.data.filter(retreat => {\n        const retreatDate = retreat.date; // Assuming `date` is in Unix timestamp format\n        return retreatDate >= start && retreatDate < end;\n      });\n      setRetreats(filtered);\n    } catch (error) {\n      console.error('Error fetching retreats', error);\n    }\n  };\n\n  // Handle changes in the date range selection\n  const handleRangeChange = event => {\n    const range = event.target.value;\n    setSelectedRange(range);\n    fetchDataAndFilter(range);\n  };\n\n  // Effect to fetch data initially (if needed)\n  useEffect(() => {\n    fetchDataAndFilter(selectedRange); // Fetch initially if there's a default range\n  }, [selectedRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleRangeChange,\n      value: selectedRange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Date Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2023-2024\",\n        children: \"2023-2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2024-2025\",\n        children: \"2024-2025\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: retreats.map(retreat => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: retreat.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: retreat.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: retreat.image,\n          alt: retreat.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: retreat.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: retreat.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(retreat.date * 1000).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [retreat.duration, \" days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, retreat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(RetreatsFilter, \"jWMfg3FQDcWaEy8ywUK2UYHna/k=\");\n_c = RetreatsFilter;\nexport default RetreatsFilter;\nvar _c;\n$RefreshReg$(_c, \"RetreatsFilter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RetreatsFilter","_s","selectedRange","setSelectedRange","retreats","setRetreats","getDateRange","range","startYear","endYear","split","map","Number","startDate","Date","endDate","start","Math","floor","getTime","end","fetchDataAndFilter","response","get","filtered","data","filter","retreat","retreatDate","date","error","console","handleRangeChange","event","target","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","description","src","image","alt","location","price","toLocaleDateString","duration","id","_c","$RefreshReg$"],"sources":["/Users/surbhi/Desktop/wellness-retreat/src/components/DateDropdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst RetreatsFilter = () => {\n  const [selectedRange, setSelectedRange] = useState('');\n  const [retreats, setRetreats] = useState([]);\n\n  // Function to convert date range to Unix timestamps\n  const getDateRange = (range) => {\n    const [startYear, endYear] = range.split('-').map(Number);\n    const startDate = new Date(startYear, 0, 1); // January 1st of the start year\n    const endDate = new Date(endYear + 1, 0, 1); // January 1st of the next year\n    return {\n      start: Math.floor(startDate.getTime() / 1000), // Convert to Unix timestamp\n      end: Math.floor(endDate.getTime() / 1000)\n    };\n  };\n\n  // Function to fetch data from API and filter based on date range\n  const fetchDataAndFilter = async (range) => {\n    const { start, end } = getDateRange(range);\n    try {\n      const response = await axios.get('https://669f704cb132e2c136fdd9a0.mockapi.io/api/v1/retreats');\n      const filtered = response.data.filter(retreat => {\n        const retreatDate = retreat.date; // Assuming `date` is in Unix timestamp format\n        return retreatDate >= start && retreatDate < end;\n      });\n      setRetreats(filtered);\n    } catch (error) {\n      console.error('Error fetching retreats', error);\n    }\n  };\n\n  // Handle changes in the date range selection\n  const handleRangeChange = (event) => {\n    const range = event.target.value;\n    setSelectedRange(range);\n    fetchDataAndFilter(range);\n  };\n\n  // Effect to fetch data initially (if needed)\n  useEffect(() => {\n    fetchDataAndFilter(selectedRange); // Fetch initially if there's a default range\n  }, [selectedRange]);\n\n  return (\n    <div>\n      <select onChange={handleRangeChange} value={selectedRange}>\n        <option value=\"\">Select Date Range</option>\n        <option value=\"2023-2024\">2023-2024</option>\n        <option value=\"2024-2025\">2024-2025</option>\n      </select>\n\n      {/* Display retreats */}\n      <div>\n        {retreats.map(retreat => (\n          <div key={retreat.id}>\n            <h2>{retreat.title}</h2>\n            <p>{retreat.description}</p>\n            <img src={retreat.image} alt={retreat.title} />\n            <p>{retreat.location}</p>\n            <p>{retreat.price}</p>\n            <p>{new Date(retreat.date * 1000).toLocaleDateString()}</p>\n            <p>{retreat.duration} days</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RetreatsFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}